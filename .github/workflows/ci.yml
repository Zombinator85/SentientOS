name: CI

on:
  push:
  pull_request:

jobs:
  build:
    outputs:
      date: ${{ steps.vars.outputs.date }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.12']
        include:
          - os: ubuntu-latest
            docker: true
        exclude:
          - os: windows-latest
            docker: true
          - os: macos-latest
            docker: true
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Set date
        id: vars
        run: echo "date=$(date -u +'%Y-%m-%d')" >> "$GITHUB_OUTPUT"
      - uses: docker/setup-buildx-action@v3
        if: matrix.docker == 'true'
      - uses: docker/setup-qemu-action@v3
        if: matrix.docker == 'true'
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements-dev.txt
      - name: Run pre-commit
        if: runner.os != 'Windows'
        run: pre-commit run --all-files
      - name: Run pre-commit (Windows)
        if: runner.os == 'Windows'
        run: pipx run pre-commit run --all-files
      - name: Force UTF-8 code page
        if: runner.os == 'Windows'
        run: chcp 65001
      - name: Run tests
        run: |
          pytest -q --cov=sentientos --cov-report=xml --cov-report=term --cov-fail-under=90
          mv coverage.xml coverage-${{ matrix.os }}-${{ steps.vars.outputs.date }}.xml
      - name: Docker build & container tests
        if: matrix.docker == 'true'
        run: |
          docker compose build
          docker compose run --rm sentientos make test
          docker compose run --rm sentientos pytest -q --cov=sentientos --cov-report=term --cov-report=xml:coverage-docker.xml
          mv coverage-docker.xml coverage-docker-${{ steps.vars.outputs.date }}.xml
      - uses: actions/upload-artifact@v4
        if: matrix.docker == 'true'
        with:
          name: coverage-docker-${{ steps.vars.outputs.date }}
          path: coverage-docker-${{ steps.vars.outputs.date }}.xml
          retention-days: 7
      - name: Strict privilege / audit lint
        run: |
          export SENTIENTOS_LINT_STRICT=1
          python privilege_lint.py --no-emoji --junit-xml build/audit-report.xml
          python verify_audits.py logs/ --no-emoji --junit-xml build/audit-report.xml
      - run: mv build/audit-report.xml build/audit-report-${{ steps.vars.outputs.date }}.xml
      - uses: actions/upload-artifact@v4
        with:
          name: audit-report-${{ matrix.os }}-${{ steps.vars.outputs.date }}
          path: build/audit-report-${{ steps.vars.outputs.date }}.xml
          retention-days: 7
      - name: Run mypy
        run: mypy --strict sentientos
      - uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.os }}-${{ steps.vars.outputs.date }}
          path: coverage-${{ matrix.os }}-${{ steps.vars.outputs.date }}.xml
          retention-days: 7
      - name: Package CI artefacts
        run: |
          tar -czf ci-artefacts-${{ matrix.os }}-${{ github.sha }}.tar.gz coverage-${{ matrix.os }}-${{ steps.vars.outputs.date }}.xml build/audit-report-${{ steps.vars.outputs.date }}.xml
      - uses: actions/upload-artifact@v4
        with:
          name: ci-artefacts-${{ matrix.os }}-${{ github.sha }}
          path: ci-artefacts-${{ matrix.os }}-${{ github.sha }}.tar.gz
          retention-days: 7
      - name: Coverage guard
        run: python scripts/coverage_guard.py

  update-coverage-badge:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v4
        with:
          name: coverage-ubuntu-latest-${{ needs.build.outputs.date }}
      - run: |
          pip install coverage-badge
          coverage-badge -o coverage.svg -f
      - run: |
          git config --global user.email "ci@sentientos.bot"
          git config --global user.name  "SentientOS CI"
          git add coverage.svg
          git commit -m "ci: update coverage badge [skip ci]"
          git push origin main
