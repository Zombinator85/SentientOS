name: Nightly Audit Integrity

on:
  schedule:
    - cron: '0 3 * * *'
  workflow_dispatch:

jobs:
  audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - run: pip install -e .[dev]
      - name: Check for existing repair PR
        id: existing
        uses: actions/github-script@v7
        with:
          script: |
            const prs = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
            });
            const found = prs.data.some(pr => pr.head.ref.startsWith('auto-repair/audit-'));
            core.setOutput('exists', found.toString());
      - name: Verify and auto repair logs
        id: repair
        run: |
          set +e
          python verify_audits.py logs/ --auto-repair --no-input | tee audit_output.txt
          echo "status=$?" >> "$GITHUB_OUTPUT"
          if [ -n "$(git status --porcelain)" ]; then
            echo "patched=true" >> "$GITHUB_OUTPUT"
          else
            echo "patched=false" >> "$GITHUB_OUTPUT"
          fi
        env:
          LUMOS_AUTO_APPROVE: '1'
        continue-on-error: true
      - name: Commit and push repairs
        if: steps.repair.outputs.patched == 'true'
        run: |
          branch="auto-repair/audit-${{ github.run_id }}"
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git checkout -b "$branch"
          git add logs
          git commit -m "chore: auto repair audit logs"
          git push origin "$branch"
      - name: Open repair PR
        if: steps.repair.outputs.patched == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: `auto-repair/audit-${{ github.run_id }}`,
              base: context.ref,
              title: `auto-repair/audit-${{ github.run_id }}`,
              body: 'Automatic audit log repair',
            });
      - name: Fail if consecutive repair failure
        if: steps.repair.outputs.status != '0' && steps.existing.outputs.exists == 'true'
        run: |
          echo "Consecutive auto repair failed" >&2
          exit 1
